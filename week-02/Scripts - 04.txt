Props and Children in React (with TypeScript)

In this lecture, you will learn about props and children.

Props

Props are inputs you pass to a component to customize its behavior or content.
Think of props like arguments to a function, but for a component.

Example:
Weâ€™ll create a component that takes three props: name, placesVisited, and year.
They are of types string, string[], and number.

First, define the props type (similar to how we defined object types in a previous lecture):

type GreetingProps = {
  name: string;
  placesVisited: string[];
  year: number;
};


Now create the component function:

export default function TypeScriptProps({
  name,
  placesVisited,
  year,
}: GreetingProps) {
  return (
    <div>
      <h1>Hello {name}</h1>
      <ul>
        {placesVisited.map((place, index) => (
          <li key={index}>{place}</li>
        ))}
      </ul>
      <h2>{year}</h2>
    </div>
  );
}


Go to app/page.tsx and import the component:

<TypeScriptProps
  name="Ferdin"
  placesVisited={["Lisbon", "Rome", "London"]}
  year={2025}
/>


Go to the browser and check.
You should now see the name, the list of places visited, and the year displayed.

Children

Every React component has a special prop called children by default.
Itâ€™s optional and represents the content you put between the opening and closing tags of a component.
This content can be plain text, valid HTML, or even other components.

Example:
Letâ€™s create a generic Card component that can wrap content.
It will accept two props: title and children.

Children is typed as React.ReactNode, which we can import from React.

type CardProps = {
  title: string;
  children: React.ReactNode;
};


Now build the component:

export default function Card({ title, children }: CardProps) {
  return (
    <div>
      <button>{title}</button>
      <div>{children}</div>
    </div>
  );
}


Go to app/page.tsx and use the Card component.
Notice how we now use opening and closing tags:

<Card title="Ferdin">
  <p>This is some content inside the card.</p>
</Card>

<Card title="Norbert">
  <p>This is some content inside the card.</p>
  <button>Click here</button>
</Card>


Now check the browser.
Youâ€™ll see that the Card component is reusable and accepts different kinds of content inside its tags.

ðŸ‘‰ Thatâ€™s the power of props and children in React with TypeScript.